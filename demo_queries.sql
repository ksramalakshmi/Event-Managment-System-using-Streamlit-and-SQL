-- JOIN QUERY
SELECT EVENT_ID, EVENT_NAME, USER_ID, F_NAME, L_NAME FROM (ATTENDED_BY NATURAL 
JOIN ATTENDEES NATURAL JOIN EVENTS)

SELECT DISTINCT EVENTS.EVENT_NAME FROM BILLS LEFT JOIN EVENTS ON BILLS.EVENT_ID 
= EVENTS.EVENT_ID WHERE BILLS.PAYMENT_STATUS = 'Pending';

-- AGGREGATE QUERY
SELECT EVENTS.EVENT_NAME, SUM(BILLS.AMOUNT) AS TOTAL FROM BILLS LEFT JOIN EVENTS 
ON BILLS.EVENT_ID = EVENTS.EVENT_ID WHERE EVENT_NAME = 'AatmaTrisha 2k22';

SELECT EVENTS.EVENT_NAME, COUNT(ATTENDED_BY.USER_ID) AS TOTAL_ATTENDEES FROM
ATTENDED_BY LEFT JOIN EVENTS ON ATTENDED_BY.EVENT_ID = EVENTS.EVENT_ID GROUP BY
ATTENDED_BY.EVENT_ID;

WITH TEMP(NAME, TOTAL) AS ( SELECT EVENTS.EVENT_NAME, COUNT(ATTENDED_BY.USER_ID) 
AS TOTAL_ATTENDEES FROM ATTENDED_BY LEFT JOIN EVENTS ON ATTENDED_BY.EVENT_ID = 
EVENTS.EVENT_ID GROUP BY ATTENDED_BY.EVENT_ID) SELECT NAME, MAX(TOTAL) FROM
TEMP;

SELECT COUNT(DEPARTMENT) AS TOTAL FROM SUPPLIER WHERE SUPPLIER.DEPARTMENT = 
'Food' GROUP BY SUPPLIER.DEPARTMENT;

-- SET OPERATIONS
SELECT ATTENDEES.F_NAME, ATTENDEES.L_NAME
FROM ATTENDEES 
WHERE ATTENDEES.STATE = 'Karnataka'
UNION
SELECT ATTENDEES.F_NAME, ATTENDEES.L_NAME
FROM ATTENDEES 
WHERE ATTENDEES.F_NAME LIKE 'S%'

SELECT DISTINCT EVENTS.EVENT_NAME FROM EVENTS INNER JOIN BILLS ON
EVENTS.EVENT_ID = BILLS.EVENT_ID;

SELECT EVENTS.EVENT_NAME 
FROM EVENTS 
WHERE EVENT_ID NOT IN (
SELECT DISTINCT BILLS.EVENT_ID
FROM BILLS);

SELECT DISTINCT EVENTS.HOST_ID, HOSTS.HOST_NAME 
FROM EVENTS 
INNER JOIN HOSTS 
ON EVENTS.HOST_ID = HOSTS.HOST_ID;

-- FUNCTION DEMO
SELECT EVENT_NAME, TOTAL_SALES(TABLE4.TOTAL_ATTENDEES) FROM TABLE4;

-- CALL PROCEDURE
CALL RETURN_ALL_BILLS();

-- CURSOR AND DELETE
DELETE FROM attendees WHERE `attendees`.`USER_ID` = 10;
DELETE FROM attendees WHERE `attendees`.`USER_ID` = 12;

CALL BACKUP()